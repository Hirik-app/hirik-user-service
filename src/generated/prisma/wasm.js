
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  phoneNumber: 'phoneNumber',
  countryCode: 'countryCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobRoleId: 'jobRoleId',
  fullName: 'fullName',
  email: 'email',
  bio: 'bio',
  location: 'location',
  expectedSalary: 'expectedSalary',
  yearsOfExperience: 'yearsOfExperience',
  availableToStart: 'availableToStart',
  immediateJoiner: 'immediateJoiner',
  preferredRole: 'preferredRole',
  profilePicture: 'profilePicture',
  cvLink: 'cvLink',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RecruiterProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fullName: 'fullName',
  companyId: 'companyId',
  jobRoleId: 'jobRoleId',
  workEmail: 'workEmail',
  location: 'location',
  isVerified: 'isVerified',
  workEmailVerified: 'workEmailVerified',
  emailVerificationToken: 'emailVerificationToken',
  emailVerificationTokenExpiresAt: 'emailVerificationTokenExpiresAt',
  recruiterVerificationMethodsId: 'recruiterVerificationMethodsId',
  verifiedBy: 'verifiedBy',
  verificationDetails: 'verificationDetails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RecruiterVerificationMethodsScalarFieldEnum = {
  id: 'id',
  method: 'method'
};

exports.Prisma.SavedJobScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobId: 'jobId',
  createdAt: 'createdAt'
};

exports.Prisma.SkillUserMapScalarFieldEnum = {
  id: 'id',
  skillId: 'skillId',
  profileId: 'profileId',
  createdAt: 'createdAt'
};

exports.Prisma.EducationScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  degree: 'degree',
  institution: 'institution',
  location: 'location',
  startDate: 'startDate',
  endDate: 'endDate',
  grade: 'grade',
  description: 'description',
  isCurrent: 'isCurrent'
};

exports.Prisma.ExperienceScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  jobRoleId: 'jobRoleId',
  companyId: 'companyId',
  location: 'location',
  startDate: 'startDate',
  endDate: 'endDate',
  isCurrent: 'isCurrent',
  rolesAndResponsibilities: 'rolesAndResponsibilities'
};

exports.Prisma.ResumeScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  title: 'title',
  fileName: 'fileName',
  fileUrl: 'fileUrl',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  isDefault: 'isDefault',
  isActive: 'isActive',
  uploadedAt: 'uploadedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationPreferencesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobMatches: 'jobMatches',
  applications: 'applications',
  interviews: 'interviews',
  messages: 'messages',
  emailEnabled: 'emailEnabled',
  pushEnabled: 'pushEnabled',
  quietHours: 'quietHours',
  frequency: 'frequency',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobSearchPreferencesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  desiredJobTypes: 'desiredJobTypes',
  minSalary: 'minSalary',
  maxSalary: 'maxSalary',
  salaryCurrency: 'salaryCurrency',
  salaryPeriod: 'salaryPeriod',
  desiredLocations: 'desiredLocations',
  isRemoteOnly: 'isRemoteOnly',
  isWillingToRelocate: 'isWillingToRelocate',
  maxCommuteMiles: 'maxCommuteMiles',
  desiredRoles: 'desiredRoles',
  desiredSkills: 'desiredSkills',
  yearsOfExperience: 'yearsOfExperience',
  desiredIndustries: 'desiredIndustries',
  minCompanySize: 'minCompanySize',
  maxCompanySize: 'maxCompanySize',
  excludedCompanies: 'excludedCompanies',
  isSearchActive: 'isSearchActive',
  lastSearchDate: 'lastSearchDate',
  savedSearches: 'savedSearches',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FCMTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  platform: 'platform',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OTPScalarFieldEnum = {
  id: 'id',
  phoneNumber: 'phoneNumber',
  countryCode: 'countryCode',
  otp: 'otp',
  expiresAt: 'expiresAt',
  attempts: 'attempts',
  userId: 'userId',
  verified: 'verified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailOTPScalarFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp',
  expiresAt: 'expiresAt',
  attempts: 'attempts',
  userId: 'userId',
  verified: 'verified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  RecruiterProfile: 'RecruiterProfile',
  RecruiterVerificationMethods: 'RecruiterVerificationMethods',
  SavedJob: 'SavedJob',
  SkillUserMap: 'SkillUserMap',
  Education: 'Education',
  Experience: 'Experience',
  Resume: 'Resume',
  NotificationPreferences: 'NotificationPreferences',
  JobSearchPreferences: 'JobSearchPreferences',
  FCMToken: 'FCMToken',
  OTP: 'OTP',
  EmailOTP: 'EmailOTP'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/admin/hirik/new-v2/hirik-backend/hirik-user-service/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/Users/admin/hirik/new-v2/hirik-backend/hirik-user-service/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.13.0",
  "engineVersion": "361e86d0ea4987e9f53a565309b3eed797a6bcbd",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Cloudflare D1 Schema for User Edge Database\n// This schema contains ALL user-related data for fast edge access\n// Used exclusively by hirik-user-service\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id          String   @id @default(uuid())\n  phoneNumber String\n  countryCode String\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  profiles                Profile[]\n  savedJobs               SavedJob[]\n  jobSearchPreferences    JobSearchPreferences?\n  notificationPreferences NotificationPreferences?\n  fcmTokens               FCMToken[]\n\n  @@unique([phoneNumber, countryCode])\n  @@map(\"users\")\n}\n\nmodel Profile {\n  id                String   @id @default(uuid())\n  userId            String\n  jobRoleId         String? // Logical reference to JobRole.id (in PostgreSQL)\n  fullName          String?\n  email             String?  @unique\n  bio               String?\n  location          String? // JSON as text\n  expectedSalary    String?\n  yearsOfExperience String?\n  availableToStart  String?\n  immediateJoiner   Boolean?\n  preferredRole     String?\n  profilePicture    String? // JSON as text\n  cvLink            String? // JSON as text\n  createdAt         DateTime @default(now()) @map(\"created_at\")\n  updatedAt         DateTime @updatedAt @map(\"updated_at\")\n\n  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  education    Education[]\n  experience   Experience[]\n  skillUserMap SkillUserMap[]\n  resumes      Resume[]\n\n  @@map(\"profiles\")\n}\n\nmodel RecruiterProfile {\n  id                              String    @id @default(uuid())\n  userId                          String    @unique\n  fullName                        String?\n  companyId                       String? // Logical reference to Company.id (in PostgreSQL)\n  jobRoleId                       String? // Logical reference to JobRole.id (in PostgreSQL)\n  workEmail                       String?\n  location                        String? // JSON as text\n  isVerified                      Boolean   @default(false)\n  workEmailVerified               Boolean   @default(false)\n  emailVerificationToken          String?\n  emailVerificationTokenExpiresAt DateTime?\n  recruiterVerificationMethodsId  String?\n  verifiedBy                      String?\n  verificationDetails             String? // JSON as text\n  createdAt                       DateTime  @default(now()) @map(\"created_at\")\n  updatedAt                       DateTime  @updatedAt @map(\"updated_at\")\n\n  recruiterVerificationMethods RecruiterVerificationMethods? @relation(fields: [recruiterVerificationMethodsId], references: [id])\n\n  @@map(\"recruiter_profiles\")\n}\n\nmodel RecruiterVerificationMethods {\n  id               String             @id @default(uuid())\n  method           String\n  RecruiterProfile RecruiterProfile[]\n\n  @@map(\"recruiter_verification_methods\")\n}\n\nmodel SavedJob {\n  id        String   @id @default(uuid())\n  userId    String\n  jobId     String // Logical reference to Job.id (in PostgreSQL)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, jobId])\n  @@map(\"saved_jobs\")\n}\n\nmodel SkillUserMap {\n  id        String   @id @default(uuid())\n  skillId   String   @map(\"skill_id\") // Logical reference to Skill.id (in PostgreSQL)\n  profileId String   @map(\"profile_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  @@unique([skillId, profileId])\n  @@map(\"skill_user_map\")\n}\n\nmodel Education {\n  id          String  @id @default(uuid())\n  profileId   String\n  degree      String\n  institution String\n  location    String? // JSON as text\n  startDate   String\n  endDate     String?\n  grade       String?\n  description String?\n  isCurrent   Boolean\n\n  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  @@map(\"education\")\n}\n\nmodel Experience {\n  id                       String  @id @default(uuid())\n  profileId                String\n  jobRoleId                String? // Logical reference to JobRole.id (in PostgreSQL)\n  companyId                String // Logical reference to Company.id (in PostgreSQL)\n  location                 String? // JSON as text\n  startDate                String\n  endDate                  String?\n  isCurrent                Boolean\n  rolesAndResponsibilities String?\n\n  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  @@map(\"experience\")\n}\n\nmodel Resume {\n  id         String   @id @default(uuid())\n  profileId  String\n  title      String // Resume title/name (e.g., \"Software Engineer Resume\", \"Frontend Developer CV\")\n  fileName   String // Original filename when uploaded\n  fileUrl    String // Cloudflare R2 URL or file storage location\n  fileSize   Int? // File size in bytes\n  mimeType   String // File MIME type (application/pdf, application/msword, etc.)\n  isDefault  Boolean  @default(false) // Whether this is the default/primary resume\n  isActive   Boolean  @default(true) // Whether the resume is active/visible\n  uploadedAt DateTime @default(now()) @map(\"uploaded_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  @@map(\"resumes\")\n}\n\nmodel NotificationPreferences {\n  id           String   @id @default(uuid())\n  userId       String   @unique\n  jobMatches   Boolean  @default(true)\n  applications Boolean  @default(true)\n  interviews   Boolean  @default(true)\n  messages     Boolean  @default(true)\n  emailEnabled Boolean  @default(true)\n  pushEnabled  Boolean  @default(true)\n  quietHours   String? // JSON as text\n  frequency    String   @default(\"immediate\") // immediate, daily, weekly\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notification_preferences\")\n}\n\nmodel JobSearchPreferences {\n  id     String @id @default(uuid())\n  userId String @unique\n\n  // Job preferences\n  desiredJobTypes String // JSON array as text\n  minSalary       Int? // Minimum acceptable salary\n  maxSalary       Int? // Maximum expected salary\n  salaryCurrency  String @default(\"USD\")\n  salaryPeriod    String @default(\"yearly\") // yearly, monthly, hourly\n\n  // Location preferences\n  desiredLocations    String? // JSON array as text\n  isRemoteOnly        Boolean @default(false)\n  isWillingToRelocate Boolean @default(false)\n  maxCommuteMiles     Int? // Maximum commute distance in miles\n\n  // Skill preferences\n  desiredRoles      String // JSON array as text - job role IDs\n  desiredSkills     String // JSON array as text - skill IDs\n  yearsOfExperience String? // Experience level\n\n  // Company preferences\n  desiredIndustries String // JSON array as text\n  minCompanySize    Int? // Minimum company size (employees)\n  maxCompanySize    Int? // Maximum company size (employees)\n  excludedCompanies String // JSON array as text - company IDs to exclude\n\n  // Search behavior\n  isSearchActive Boolean   @default(true) // Whether user is actively looking\n  lastSearchDate DateTime? // Last time user performed a search\n  savedSearches  String? // JSON array as text - saved search parameters\n\n  // Timestamps\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"job_search_preferences\")\n}\n\nmodel FCMToken {\n  id        String   @id @default(uuid())\n  userId    String\n  token     String   @unique\n  platform  String // ios, android\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"fcm_tokens\")\n}\n\nmodel OTP {\n  id          String   @id @default(uuid())\n  phoneNumber String\n  countryCode String\n  otp         String\n  expiresAt   DateTime\n  attempts    Int      @default(0)\n  userId      String?\n  verified    Boolean  @default(false)\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  @@unique([phoneNumber, countryCode])\n  @@map(\"otps\")\n}\n\nmodel EmailOTP {\n  id        String   @id @default(uuid())\n  email     String\n  otp       String\n  expiresAt DateTime\n  attempts  Int      @default(0)\n  userId    String?\n  verified  Boolean  @default(false)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@unique([email])\n  @@map(\"email_otps\")\n}\n",
  "inlineSchemaHash": "5de8a5fe5c2f13f53013189918dd934be01700dcecc2c4e3feccefe2c9f32718",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"profiles\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"},{\"name\":\"savedJobs\",\"kind\":\"object\",\"type\":\"SavedJob\",\"relationName\":\"SavedJobToUser\"},{\"name\":\"jobSearchPreferences\",\"kind\":\"object\",\"type\":\"JobSearchPreferences\",\"relationName\":\"JobSearchPreferencesToUser\"},{\"name\":\"notificationPreferences\",\"kind\":\"object\",\"type\":\"NotificationPreferences\",\"relationName\":\"NotificationPreferencesToUser\"},{\"name\":\"fcmTokens\",\"kind\":\"object\",\"type\":\"FCMToken\",\"relationName\":\"FCMTokenToUser\"}],\"dbName\":\"users\"},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expectedSalary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsOfExperience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availableToStart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"immediateJoiner\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cvLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"},{\"name\":\"education\",\"kind\":\"object\",\"type\":\"Education\",\"relationName\":\"EducationToProfile\"},{\"name\":\"experience\",\"kind\":\"object\",\"type\":\"Experience\",\"relationName\":\"ExperienceToProfile\"},{\"name\":\"skillUserMap\",\"kind\":\"object\",\"type\":\"SkillUserMap\",\"relationName\":\"ProfileToSkillUserMap\"},{\"name\":\"resumes\",\"kind\":\"object\",\"type\":\"Resume\",\"relationName\":\"ProfileToResume\"}],\"dbName\":\"profiles\"},\"RecruiterProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"workEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerificationTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"recruiterVerificationMethodsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verifiedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"recruiterVerificationMethods\",\"kind\":\"object\",\"type\":\"RecruiterVerificationMethods\",\"relationName\":\"RecruiterProfileToRecruiterVerificationMethods\"}],\"dbName\":\"recruiter_profiles\"},\"RecruiterVerificationMethods\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"RecruiterProfile\",\"kind\":\"object\",\"type\":\"RecruiterProfile\",\"relationName\":\"RecruiterProfileToRecruiterVerificationMethods\"}],\"dbName\":\"recruiter_verification_methods\"},\"SavedJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SavedJobToUser\"}],\"dbName\":\"saved_jobs\"},\"SkillUserMap\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skill_id\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToSkillUserMap\"}],\"dbName\":\"skill_user_map\"},\"Education\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCurrent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"EducationToProfile\"}],\"dbName\":\"education\"},\"Experience\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCurrent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rolesAndResponsibilities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ExperienceToProfile\"}],\"dbName\":\"experience\"},\"Resume\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"uploaded_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToResume\"}],\"dbName\":\"resumes\"},\"NotificationPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobMatches\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"interviews\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"messages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pushEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"quietHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationPreferencesToUser\"}],\"dbName\":\"notification_preferences\"},\"JobSearchPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desiredJobTypes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minSalary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxSalary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"salaryCurrency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryPeriod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desiredLocations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemoteOnly\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isWillingToRelocate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maxCommuteMiles\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"desiredRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desiredSkills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsOfExperience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desiredIndustries\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minCompanySize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCompanySize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"excludedCompanies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSearchActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSearchDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"savedSearches\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobSearchPreferencesToUser\"}],\"dbName\":\"job_search_preferences\"},\"FCMToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FCMTokenToUser\"}],\"dbName\":\"fcm_tokens\"},\"OTP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"otps\"},\"EmailOTP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"email_otps\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

